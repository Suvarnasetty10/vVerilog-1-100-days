// Code your design here
module calculator(
    input  [31:0] a,    
    input  [31:0] b,    
    input  [3:0]  s,    
    output [31:0] y     
);
    alu u1 (
        .a(a),
        .b(b),
        .s(s),
        .y(y)
    );
endmodule
module alu(s,a,b,y);
  input [31:0]a,b;
  //input wire[3:0]c;
  input wire[3:0] s;
  output reg[31:0] y;
  always@(*)begin
      if(s==0)
        y=a+b;
      else if(s==1)
        y=a-b;
      else if(s==2)
        y=a*b;
    else if(s==3) begin
      if(b!=0)
        y=a/b;
      else
        y=32'hx;   
    end
    else if(s==4)
        y=a & b;
    else if(s==5)
        y=a | b;
    else if(s==6)
      y=(a ^ b);
    else if(s==7)
      y=~(a & b);
    else if(s==8)
      y=~(a | b);
    else if(s==9)
      y=~(a ^ b);
    else if(s==10)
      y=~(a);
    
    else
      y = 32'b0; 
    end
endmodule
//tb code for  caLculator
module tb;
    reg [31:0] a, b;
    reg [3:0] s;
    reg [31:0] expected;
    wire [31:0] y;
    integer i;

    reg [31:0] a_values [0:4];
    reg [31:0] b_values [0:4];

    calculator u2 (.a(a), .b(b), .s(s), .y(y));

    initial begin
        a_values[0] = 10; b_values[0] = 20;
        a_values[1] = 20; b_values[1] = 90;
        a_values[2] = 30; b_values[2] = 40;
        a_values[3] = 40; b_values[3] = 50;
        a_values[4] = 50; b_values[4] = 60;

        for (s = 0; s < 11; s = s + 1) begin
            for (i = 0; i < 5; i = i + 1) begin
                a = a_values[i];
                b = b_values[i];
                #1; // Wait for y to update
                $display("s=%0d,| a=%0d,| b=%0d,| y=%0d,| a=%0b,| b=%0b,| y=%0b", s, a, b, $signed(y), a, b, y);
            end
        end
        $finish;
    end
endmodule


