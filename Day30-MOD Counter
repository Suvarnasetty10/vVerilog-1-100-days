// Code your design here
module modcounter(clk,reset,count);
  input clk,reset;
  output reg[3:0]count;
  always@(posedge clk or negedge reset)begin
    if(!reset)
      count<=4'd0;
    else if(count==4'd9)
    count<=4'd0;
  else
    count<=count+4'd1;
  end
endmodule
 // Code your testbench here
// or browse Examples
module tb;
  reg clk,reset;
  wire [3:0]count;
  modcounter u1(.clk(clk),.reset(reset),.count(count));
   initial begin
     clk=0;
  forever #5 clk=~clk;
  end
  initial begin
    reset=0;#10;
    reset=1;#100;
    $finish;
  end
  always@(posedge clk)begin
    $display("clk=%0b,reset=%0b,count=%0d",clk,reset,count); 
  end
endmodule
 //output:
# KERNEL: clk=1,reset=0,count=0
# KERNEL: clk=1,reset=1,count=0
# KERNEL: clk=1,reset=1,count=1
# KERNEL: clk=1,reset=1,count=2
# KERNEL: clk=1,reset=1,count=3
# KERNEL: clk=1,reset=1,count=4
# KERNEL: clk=1,reset=1,count=5
# KERNEL: clk=1,reset=1,count=6
# KERNEL: clk=1,reset=1,count=7
# KERNEL: clk=1,reset=1,count=8
# KERNEL: clk=1,reset=1,count=9


            
  
  
  
