//design code for alu
module alu(s,a,b,c,y);
  input [31:0]a,b;
  input wire[3:0]c;
  input wire[3:0] s;
  output reg[31:0] y;
  always@(*)begin
      if(s==0)
        y=a+b;
      else if(s==1)
        y=a-b;
      else if(s==2)
        y=a*b;
    else if(s==3) begin
      if(b!=0)
        y=a/b;
      else
        y=32'hx;   
    end
    else if(s==4)
        y=a & b;
    else if(s==5)
        y=a | b;
    else if(s==6)
      y=(a ^ b);
    else if(s==7)
      y=~(a & b);
    else if(s==8)
      y=~(a | b);
    else if(s==9)
      y=~(a ^ b);
    else if(s==10)
      y=~(a);
    
    else
      y = 32'b0; 
    end
endmodule
//testtb for alu:
module tb;
  reg[31:0]a,b;
  reg[3:0]c;
  // integer a=4;
  //integer b=2;
  reg[3:0] s;
  wire  [31:0] y;
  integer j;
  alu u1(.a(a),.b(b),.s(s),.y(y));
  initial begin
    a=4;
    b=2;
    for(j=0;j<11;j++)
      begin
        s=j;
        #1;
        $display("s=%0d,a=%0d,b=%0d,y=%0d",s,a,b,$signed(y));
      end
    $finish;
  end   
  endmodule
//output:
# KERNEL: s=0,a=4,b=2,y=6
# KERNEL: s=1,a=4,b=2,y=2
# KERNEL: s=2,a=4,b=2,y=8
# KERNEL: s=3,a=4,b=2,y=2
# KERNEL: s=4,a=4,b=2,y=0
# KERNEL: s=5,a=4,b=2,y=6
# KERNEL: s=6,a=4,b=2,y=6
# KERNEL: s=7,a=4,b=2,y=-1
# KERNEL: s=8,a=4,b=2,y=-7
# KERNEL: s=9,a=4,b=2,y=-7
# KERNEL: s=10,a=4,b=2,y=-5




