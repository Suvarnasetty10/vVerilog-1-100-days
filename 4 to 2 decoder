//design code for 4 to 2 decoder
module decoder(
  input  wire [1:0]d,
  output reg [3:0] y);
  always@(*) begin
    case(d)
      2'b00:y=4'b0001;
      2'b01:y=4'b0010;
      2'b10:y=4'b0100;
      2'b11:y=4'b1000;
    endcase
  end
endmodule

//testbench code for 4 to 2 decoder
module tb;
  reg [1:0]d;
  wire[3:0]y;
  decoder u1(.d(d),.y(y));
  initial begin
    $monitor("d=%2b,y=%04b",d,y);
    d=2'b00;#3;
    d=2'b01;#3;
    d=2'b10;#3;
    d=2'b11;#3;
    $finish;
  end
  endmodule 

//output:
# KERNEL: d=00,y=0001
# KERNEL: d=01,y=0010
# KERNEL: d=10,y=0100
# KERNEL: d=11,y=1000
