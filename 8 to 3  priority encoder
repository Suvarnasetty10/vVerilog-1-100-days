//design code of 8 to 3  priority encoder
module encoder(
  input wire[7:0] d,
  output reg[2:0]y
);
  always@(*)begin
    casex(d)
      8'b00000001:y=3'b000;
      8'b0000001x:y=3'b001;
      8'b000001xx:y=3'b010;
      8'b00001xxx:y=3'b011;
      8'b0001xxxx:y=3'b100;
      8'b001xxxxx:y=3'b101;
      8'b01xxxxxx:y=3'b110;
      8'b1xxxxxxx:y=3'b111;
      default:y=3'b000;
    endcase
  end
endmodule
//tb for8 to 3  priority encoder
module tb;
  reg [7:0]d;
  wire[2:0]y;
  encoder u1(.d(d),.y(y));
  initial begin
    $monitor("d=%8b,y=%b",d,y);
    d=8'b00000001;#3;
    d=8'b00000011;#3;
    d=8'b000001xx;#3;
    d=8'b00001111;#3;
    d=8'b0001xxxx;#3;
    d=8'b001xxxxx;#3;
    d=8'b01xxxxxx;#3;
    d=8'b11111111;#3;
  end
endmodule
  
 //output:
# KERNEL: d=00000001,y=000
# KERNEL: d=00000011,y=001
# KERNEL: d=000001xx,y=010
# KERNEL: d=00001111,y=011
# KERNEL: d=0001xxxx,y=100
# KERNEL: d=001xxxxx,y=101
# KERNEL: d=01xxxxxx,y=110
# KERNEL: d=11111111,y=111

  
 

    
      
    
    
