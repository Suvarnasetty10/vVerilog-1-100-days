// Design Code for gray to binarycode
module gtob(
  input[3:0]g,
  output[3:0]b);
  assign b[3]=g[3];
  assign b[2]=b[3]^g[2];
  assign b[1]=b[2]^g[1];
  assign b[0]=b[1]^g[0];
endmodule
// test Code for gray to binarycode
module tb;
  reg [3:0]g;
  wire [3:0]b;
  gtob u1(.b(b),.g(g));
  initial begin
    $monitor("g=%04b,b=%04b",g,b);
   g=4'b0011;#3; 
   g=4'b1011;#3; 
   g=4'b1111;#3; 
   
    //$monitor("b4=%0b,b3=%0b,b2=%0b,b1=%0b,g4=%0b,g3=%0b,g2=%0b,g1=%0b",b4,b3,b2,b1,g4,g3,g2,g1);
  end
endmodule

output:
# KERNEL: g=0011,b=0010
# KERNEL: g=1011,b=1101
# KERNEL: g=1111,b=1010
  
