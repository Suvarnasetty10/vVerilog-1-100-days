//code  design code for encoder
module encoder(d0,d1,d2,d3,d4,d5,d6,d7,y0,y1,y2);
  input d0,d1,d2,d3,d4,d5,d6,d7;
  output y0,y1,y2;
  assign y0= d1|d3|d5|d7;
  assign y1=d2|d3|d6|d7;
  assign y2=d4|d5|d6|d7;
endmodule
////testbench code for encoder
module tb;
  reg d0,d1,d2,d3,d4,d5,d6,d7;
  reg  y2,y1,y0;
  encoder u1(.d0(d0),.d1(d1),.d2(d2),.d3(d3),.d4(d4),.d5(d5),.d6(d6),.d7(d7),.y0(y0),.y1(y1),.y2(y2));
  initial
    begin
      $monitor("d7=%0b,d6=%0b,d5=%0b,d4=%0b,d3=%0b,d2=%0b,d1=%0b,d0=%0b,y2=%0b,y1=%0b,y0=%0b",d7,d6,d5,d4,d3,d2,d1,d0,y2,y1,y0);
      
      d7=0; d6=0; d5=0; d4=0; d3=0; d2=0; d1=0; d0=1; #3;
      d7=0; d6=0; d5=0; d4=0; d3=0; d2=0; d1=1; d0=0; #3;
      d7=0; d6=0; d5=0; d4=0; d3=0; d2=1; d1=0; d0=0; #3;
      d7=0; d6=0; d5=0; d4=0; d3=1; d2=0; d1=0; d0=0; #3;
      d7=0; d6=0; d5=0; d4=1; d3=0; d2=0; d1=0; d0=0; #3;
      d7=0; d6=0; d5=1; d4=0; d3=0; d2=0; d1=0; d0=0; #3;
      d7=0; d6=1; d5=0; d4=0; d3=0; d2=0; d1=0; d0=0; #3;
      d7=1; d6=0; d5=0; d4=0; d3=0; d2=0; d1=0; d0=0; #3;
      
      $finish;
    end
endmodule

//output:
# KERNEL: d7=0,d6=0,d5=0,d4=0,d3=0,d2=0,d1=0,d0=1,y2=0,y1=0,y0=0
# KERNEL: d7=0,d6=0,d5=0,d4=0,d3=0,d2=0,d1=1,d0=0,y2=0,y1=0,y0=1
# KERNEL: d7=0,d6=0,d5=0,d4=0,d3=0,d2=1,d1=0,d0=0,y2=0,y1=1,y0=0
# KERNEL: d7=0,d6=0,d5=0,d4=0,d3=1,d2=0,d1=0,d0=0,y2=0,y1=1,y0=1
# KERNEL: d7=0,d6=0,d5=0,d4=1,d3=0,d2=0,d1=0,d0=0,y2=1,y1=0,y0=0
# KERNEL: d7=0,d6=0,d5=1,d4=0,d3=0,d2=0,d1=0,d0=0,y2=1,y1=0,y0=1
# KERNEL: d7=0,d6=1,d5=0,d4=0,d3=0,d2=0,d1=0,d0=0,y2=1,y1=1,y0=0
# KERNEL: d7=1,d6=0,d5=0,d4=0,d3=0,d2=0,d1=0,d0=0,y2=1,y1=1,y0=1
  
  
  
